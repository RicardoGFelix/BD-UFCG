-- Roteiro 02 - José Ricardo Galdino Felix

-- Questão 1:

CREATE TABLE "tarefas" (id BIGINT, descricao VARCHAR(200), coisa VARCHAR(11), numero INT, letra CHAR(1));

-- Inseridos com sucesso
INSERT INTO tarefas VALUES (2147483646, 'limpar chão do corredor central', '98765432111', 0, 'F');
INSERT INTO tarefas VALUES (2147483647, 'limpar janelas da sala 203', '98765432122', 1, 'F');
INSERT INTO tarefas VALUES (null, null, null, null, null);

-- Insercoes com erro
INSERT INTO tarefas VALUES (2147483644, 'limpar chão do corredor superior', '987654323211', 0, 'F');
INSERT INTO tarefas VALUES (2147483643, 'limpar chão do corredor superios', '98765432321', 0, 'FF');

-- Questão 2:

-- Insercao realizada com sucesso
INSERT INTO tarefas VALUES (2147483648, 'limpar portas do térreo', '32323232955', 4, 'A');


-- Questão 3:

-- Alterando penultima coluna
ALTER TABLE tarefas ADD CONSTRAINT check_numero CHECK (numero < 32768);

-- Insercoes com erro
INSERT INTO tarefas VALUES (2147483649, 'limpar portas da entrada principal','32322525199', 32768, 'A');
INSERT INTO tarefas VALUES (2147483650, 'limpar janelas da entrada principal', '32333233288', 32769, 'A');

-- Inseridos com sucesso
INSERT INTO tarefas VALUES (2147483651, 'limpar portas do 1o andar','32323232911', 32767, 'A');
INSERT INTO tarefas VALUES (2147483652, 'limpar portas do 2o andar', '32323232911', 32766, 'A');

-- Questão 4:

-- Excluindo tarefa com atributos nulos
DELETE FROM tarefas WHERE id is null;

-- Renomeando atributos
ALTER TABLE tarefas RENAME COLUMN coisa TO func_resp_cpf; 
ALTER TABLE tarefas RENAME COLUMN numero TO prioridade;
ALTER TABLE tarefas RENAME COLUMN letra TO status;

-- Proibindo insercao de atributos nulos
ALTER TABLE tarefas ALTER COLUMN id SET NOT NULL, ALTER COLUMN descricao SET NOT NULL, 
ALTER COLUMN func_resp_cpf SET NOT NULL, 
ALTER COLUMN prioridade SET NOT NULL, 
ALTER COLUMN status SET NOT NULL;

-- Questão 5:

-- Criando PK
ALTER TABLE tarefas ADD PRIMARY KEY(id);

-- Insercao com sucesso
INSERT INTO tarefas VALUES (2147483653, 'limpar portas do 1o andar','32323232911', 2, 'A');

-- Insercao com erro
INSERT INTO tarefas VALUES (2147483653, 'aparar a grama da área frontal', '32323232911', 3, 'A');

-- Questão 6:

-- Adicionando restrição de tamanho do cpf
ALTER TABLE tarefas ADD CONSTRAINT check_length_cpf CHECK (char_length(func_resp_cpf) = 11);

-- Atualizando status
UPDATE tarefas SET status = 'P' WHERE (status = 'A');
UPDATE tarefas SET status = 'E' WHERE (status = 'R');
UPDATE tarefas SET status = 'C' WHERE (status = 'F');

-- Adicionando restricao para status = (P, E ou C)
ALTER TABLE tarefas ADD CONSTRAINT check_status CHECK (status='P' OR status='E' OR status='C');

-- Questão 7:

-- Atualizando prioridade
UPDATE tarefas SET prioridade = 5 WHERE (prioridade > 5);

-- Adicionando restricao p/ prioridade (p>=0 e p<=5)
ALTER TABLE tarefas ADD CONSTRAINT check_prioridade CHECK (prioridade>=0 AND prioridade<=5);

-- Questão 8:

-- Criando tabela de funcionario com PK e FK
CREATE TABLE funcionario (cpf CHAR(11), data_nasc DATE NOT NULL, nome VARCHAR(140) NOT NULL, funcao VARCHAR(11) NOT NULL, nivel CHAR(1) NOT NULL, superior_cpf CHAR(11), PRIMARY KEY(cpf), FOREIGN KEY(superior_cpf) REFERENCES funcionario(cpf));

-- Adicionando restricoes
ALTER TABLE funcionario ADD CONSTRAINT check_funcao CHECK (funcao='LIMPEZA' OR funcao='SUP_LIMPEZA');
ALTER TABLE funcionario ADD CONSTRAINT check_superior_cpf CHECK (NOT (funcao='LIMPEZA') OR superior_cpf IS NOT NULL);
ALTER TABLE funcionario ADD CONSTRAINT check_nivel CHECK (nivel='J' OR nivel='P' OR nivel='S');
ALTER TABLE funcionario ADD CONSTRAINT check_length_cpf CHECK (char_length(cpf)=11);
ALTER TABLE funcionario ADD CONSTRAINT check_length_superior_cpf CHECK (char_length(superior_cpf)=11);

-- Insercoes de funcionarios com sucesso
INSERT INTO funcionario (cpf, data_nasc, nome, funcao, nivel, superior_cpf) VALUES ('12345678911', '1980-05-07', 'Pedro da Silva', 'SUP_LIMPEZA', 'S', null);
INSERT INTO funcionario(cpf, data_nasc, nome, funcao, nivel, superior_cpf) VALUES ('12345678912', '1980-03-08', 'Jose da Silva', 'LIMPEZA', 'J', '12345678911');

-- Insercoes de funcionarios com erro
INSERT INTO funcionario(cpf, data_nasc, nome, funcao, nivel, superior_cpf) VALUES ('12345678913', '1980-04-09', 'joao da Silva', 'LIMPEZA', 'J', null);

-- Questão 9:

-- Add funcionarios
INSERT INTO public.funcionario (cpf, data_nasc, nome, funcao, nivel, superior_cpf) VALUES ('12345678913', '1980-05-07', 'Vegeta', 'SUP_LIMPEZA', 'S', NULL);
INSERT INTO public.funcionario (cpf, data_nasc, nome, funcao, nivel, superior_cpf) VALUES ('12345678914', '1980-03-08', 'Goku', 'LIMPEZA', 'J', '12345678911');
INSERT INTO public.funcionario (cpf, data_nasc, nome, funcao, nivel, superior_cpf) VALUES ('12345678915', '1980-04-09', 'Sam Wilson', 'LIMPEZA', 'J', '12345678912');
INSERT INTO public.funcionario (cpf, data_nasc, nome, funcao, nivel, superior_cpf) VALUES ('12345678916', '1997-12-31', 'Ryu', 'SUP_LIMPEZA', 'S', '12345678912');
INSERT INTO public.funcionario (cpf, data_nasc, nome, funcao, nivel, superior_cpf) VALUES ('12345678917', '1948-04-15', 'Helmut Zemo', 'LIMPEZA', 'P', '12345678911');
INSERT INTO public.funcionario (cpf, data_nasc, nome, funcao, nivel, superior_cpf) VALUES ('12345678918', '1994-02-10', 'Wanda Maximoff', 'LIMPEZA', 'S', '12345678911');
INSERT INTO public.funcionario (cpf, data_nasc, nome, funcao, nivel, superior_cpf) VALUES ('12345678919', '1990-01-20', 'Visão', 'SUP_LIMPEZA', 'P', NULL);
INSERT INTO public.funcionario (cpf, data_nasc, nome, funcao, nivel, superior_cpf) VALUES ('23472986871', '1990-01-20', 'Steve Fox', 'SUP_LIMPEZA', 'S', NULL);
INSERT INTO public.funcionario (cpf, data_nasc, nome, funcao, nivel, superior_cpf) VALUES ('23472986823', '2000-02-28', 'Peter Parker', 'LIMPEZA', 'S', '12345678912');
INSERT INTO public.funcionario (cpf, data_nasc, nome, funcao, nivel, superior_cpf) VALUES ('24472980000', '1998-03-15', 'Chun-Li', 'LIMPEZA', 'S', '12345678911');
INSERT INTO public.funcionario (cpf, data_nasc, nome, funcao, nivel, superior_cpf) VALUES ('56030188245', '1975-07-23', 'Tony Stark', 'LIMPEZA', 'J', '12345678912');
INSERT INTO public.funcionario (cpf, data_nasc, nome, funcao, nivel, superior_cpf) VALUES ('60000000000', '1991-07-23', 'Christie Montero', 'SUP_LIMPEZA', 'S', '12345678911');
INSERT INTO public.funcionario (cpf, data_nasc, nome, funcao, nivel, superior_cpf) VALUES ('98765432111', '1988-11-23', 'Bulma', 'SUP_LIMPEZA', 'S', NULL);
INSERT INTO public.funcionario (cpf, data_nasc, nome, funcao, nivel, superior_cpf) VALUES ('98765432122', '1990-05-16', 'Chi-Chi', 'SUP_LIMPEZA', 'P', NULL);

-- Questão 10:

-- Inserindo funcionarios que nao estavam na tabela
INSERT INTO funcionario VALUES (32323232955, '1997-10-28', 'Ken Masters', 'SUP_LIMPEZA', 'P', NULL);
INSERT INTO funcionario VALUES (32323232911, '1997-04-28', 'Athena', 'SUP_LIMPEZA', 'P', NULL);

-- Criando FK de tarefa para funcionario
ALTER TABLE tarefas ADD CONSTRAINT func_cpf FOREIGN KEY (func_resp_cpf) REFERENCES funcionario(cpf);

-- Questão 11:

-- Eliminando constraint anteriormente criada
ALTER TABLE tarefas DROP CONSTRAINT func_cpf;

-- Criando a constraint de modo atualizado
ALTER TABLE tarefas ADD CONSTRAINT func_cpf FOREIGN KEY (func_resp_cpf) REFERENCES funcionario(cpf) ON DELETE SET NULL;

-- Permitindo que func_resp_cpf seja null caso o status for 'P'
ALTER TABLE tarefas ALTER COLUMN func_resp_cpf DROP NOT NULL;

ALTER TABLE tarefas ADD CONSTRAINT check_cpf_null CHECK(NOT (status='E' OR status='C') OR func_resp_cpf IS NOT NULL);














